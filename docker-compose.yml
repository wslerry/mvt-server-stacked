name: mvt-server-stack
services:
  maputnik1:
    container_name: maputnik-v170
    env_file:
      - .env
    build:
      context: ./maputnik
      dockerfile: Dockerfile.v170
    image: lerryws/maputnik:1.7.0
    ports:
      - "8081:80"
    restart: unless-stopped
    networks:
      - maputnik-network
    depends_on:
      - db
      - martin

  maputnik2:
    container_name: maputnik-latest
    env_file:
      - .env
    build:
      context: ./maputnik
      dockerfile: Dockerfile.latest
    image: lerryws/maputnik:latest
    ports:
      - "8082:80"
    restart: unless-stopped
    networks:
      - maputnik-network
    depends_on:
      - db
      - martin

  db:
    build: ./postgis
    image: lerryws/postgis:latest
    container_name: maputnik_db
    env_file:
      - .env
    volumes:
      - ./db/data:/var/lib/postgresql/data
      - ./data/osm:/opt/osm_data
    environment:
      - TZ=${TZ}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    restart: unless-stopped
    networks:
      - maputnik-network

  pgadmin:
    container_name: pgadmin_maputnik_db
    image: dpage/pgadmin4:latest
    env_file:
      - .env
    environment:
      - TZ=${TZ}
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    restart: unless-stopped
    volumes:
      - ./db/pgadmin:/var/lib/pgadmin
    ports:
      - "8083:80"
    networks:
      - maputnik-network
    depends_on:
      - db

  martin:
    image: ghcr.io/maplibre/martin:latest
    container_name: martin
    env_file:
      - .env
    volumes:
      - ./configs/martin:/opt/
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}
    restart: unless-stopped
    ports:
      - "8084:3000"
    networks:
      - maputnik-network
    depends_on:
      - db

  tileserver-gl:
    image: maptiler/tileserver-gl:v5.1.2
    container_name: tileserver-gl
    volumes:
      - ./data/mbtiles:/data
    restart: unless-stopped
    ports:
      - "8085:8080"
    networks:
      - maputnik-network

  trex:
    build:
      context: ./t-rex
      dockerfile: Dockerfile
    image: lerryws/t-rex:v0.14.3
    container_name: trex
    env_file:
      - .env
    environment:
      - TZ=${TZ}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}
    ports:
      - "8086:6767"
    volumes:
      - ./configs/t_rex:/opt/config
      - ./data/t_rex/data:/opt/data
      - ./data/t_rex/cache:/tmp/mvtcache
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - maputnik-network

networks:
  maputnik-network:
    driver: bridge
